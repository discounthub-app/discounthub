name: CI

on:
  pull_request:
    branches: [ "main", "develop" ]
  push:
    branches: [ "develop" ]

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: discounthub
          POSTGRES_USER: discounthub_user
          POSTGRES_PASSWORD: secret123
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U discounthub_user -d discounthub"
          --health-interval=5s --health-timeout=5s --health-retries=20

    # –í–ê–ñ–ù–û: –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ backend
    defaults:
      run:
        working-directory: backend

    env:
      # —Ç–æ, —á—Ç–æ –∂–¥—É—Ç –≤–∞—à–∏ settings (pydantic)
      POSTGRES_DB: discounthub
      POSTGRES_USER: discounthub_user
      POSTGRES_PASSWORD: secret123
      POSTGRES_HOST: localhost
      POSTGRES_PORT: "5432"
      # alembic
      ALEMBIC_CONFIG: backend/alembic.ini
      # —á—Ç–æ–±—ã python –≤–∏–¥–µ–ª –ø–∞–∫–µ—Ç app –∏–∑ backend/
      PYTHONPATH: ${{ github.workspace }}/backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libpq-dev

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pytest pytest-cov alembic

      - name: Wait for Postgres
        run: |
          for i in {1..60}; do
            pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER && break
            sleep 1
          done

      - name: Run Alembic migrations
        run: alembic upgrade head

      - name: Pytest (cov ‚â•70%)
        env:
          # –∏–Ω–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å PYTHONPATH –∏ —Ç—É—Ç
          PYTHONPATH: ${{ github.workspace }}/backend
        run: pytest -q --maxfail=1 --disable-warnings --cov=app --cov-report=term-missing --cov-fail-under=70

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          # üîß –£–ë–†–ê–õ–ò cache-dependency-path, —Ç.–∫. –≤ –≤–µ—Ç–∫–µ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å package-lock.json
          # cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: npm run build
