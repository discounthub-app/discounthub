name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: {}   # возможность ручного запуска

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: discounthub
          POSTGRES_USER: discounthub_user
          POSTGRES_PASSWORD: secret123
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U discounthub_user -d discounthub"
          --health-interval=5s --health-timeout=5s --health-retries=30

    defaults:
      run:
        working-directory: backend

    env:
      POSTGRES_DB: discounthub
      POSTGRES_USER: discounthub_user
      POSTGRES_PASSWORD: secret123
      POSTGRES_HOST: localhost
      POSTGRES_PORT: "5432"
      # Alembic конфиг
      ALEMBIC_CONFIG: backend/alembic.ini
      PYTHONPATH: ${{ github.workspace }}/backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libpq-dev

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pytest pytest-cov alembic

      - name: Wait for Postgres
        run: |
          for i in {1..60}; do
            pg_isready -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" && break
            sleep 1
          done

      - name: Alembic upgrade
        run: alembic -c alembic.ini upgrade head


      - name: Tests (skip if none)
        if: ${{ hashFiles('backend/tests/**/*.py') != '' }}
        run: |
          python -m pip install -U pytest pytest-cov
          pytest -q --maxfail=1 --disable-warnings --cov=app --cov-report=term-missing --cov-fail-under=0


  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest

    defaults:
      run:

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install deps
        run: npm ci || npm install

      - name: Build
        run: npm run build
